/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _MENU_CALCULADORA_H_RPCGEN
#define _MENU_CALCULADORA_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct intpair {
	int a;
	int b;
};
typedef struct intpair intpair;

struct doublepair {
	double a;
	double b;
};
typedef struct doublepair doublepair;

typedef struct {
	u_int resultvector_len;
	int *resultvector_val;
} resultvector;

typedef struct {
	u_int resultmatriz_len;
	int *resultmatriz_val;
} resultmatriz;

struct matrizpair {
	resultmatriz m1;
	resultmatriz m2;
};
typedef struct matrizpair matrizpair;

struct vectorpair {
	resultvector v1;
	resultvector v2;
};
typedef struct vectorpair vectorpair;

#define CALCPROG 0x20000001
#define CALCULADORA 1

#if defined(__STDC__) || defined(__cplusplus)
#define SUMA 1
extern  int * suma_1(intpair *, CLIENT *);
extern  int * suma_1_svc(intpair *, struct svc_req *);
#define RESTA 2
extern  int * resta_1(intpair *, CLIENT *);
extern  int * resta_1_svc(intpair *, struct svc_req *);
#define MULTIPLICA 3
extern  int * multiplica_1(intpair *, CLIENT *);
extern  int * multiplica_1_svc(intpair *, struct svc_req *);
#define DIVIDE 4
extern  double * divide_1(doublepair *, CLIENT *);
extern  double * divide_1_svc(doublepair *, struct svc_req *);
#define SUMA_VECTOR 5
extern  resultvector * suma_vector_1(vectorpair *, CLIENT *);
extern  resultvector * suma_vector_1_svc(vectorpair *, struct svc_req *);
#define RESTA_VECTOR 6
extern  resultvector * resta_vector_1(vectorpair *, CLIENT *);
extern  resultvector * resta_vector_1_svc(vectorpair *, struct svc_req *);
#define PRODUCTO_VECTOR 7
extern  int * producto_vector_1(vectorpair *, CLIENT *);
extern  int * producto_vector_1_svc(vectorpair *, struct svc_req *);
#define SUMA_MATRIZ 8
extern  resultmatriz * suma_matriz_1(matrizpair *, CLIENT *);
extern  resultmatriz * suma_matriz_1_svc(matrizpair *, struct svc_req *);
#define RESTA_MATRIZ 9
extern  resultmatriz * resta_matriz_1(matrizpair *, CLIENT *);
extern  resultmatriz * resta_matriz_1_svc(matrizpair *, struct svc_req *);
#define PRODUCTO_MATRIZ 10
extern  resultmatriz * producto_matriz_1(matrizpair *, CLIENT *);
extern  resultmatriz * producto_matriz_1_svc(matrizpair *, struct svc_req *);
#define LOGARITMO 11
extern  double * logaritmo_1(doublepair *, CLIENT *);
extern  double * logaritmo_1_svc(doublepair *, struct svc_req *);
#define SENO 12
extern  double * seno_1(double *, CLIENT *);
extern  double * seno_1_svc(double *, struct svc_req *);
#define COS 13
extern  double * cos_1(double *, CLIENT *);
extern  double * cos_1_svc(double *, struct svc_req *);
#define AREA_TRIANGULO 14
extern  double * area_triangulo_1(doublepair *, CLIENT *);
extern  double * area_triangulo_1_svc(doublepair *, struct svc_req *);
#define AREA_RECTANGULO 15
extern  double * area_rectangulo_1(doublepair *, CLIENT *);
extern  double * area_rectangulo_1_svc(doublepair *, struct svc_req *);
#define AREA_CIRCULO 16
extern  double * area_circulo_1(doublepair *, CLIENT *);
extern  double * area_circulo_1_svc(doublepair *, struct svc_req *);
extern int calcprog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define SUMA 1
extern  int * suma_1();
extern  int * suma_1_svc();
#define RESTA 2
extern  int * resta_1();
extern  int * resta_1_svc();
#define MULTIPLICA 3
extern  int * multiplica_1();
extern  int * multiplica_1_svc();
#define DIVIDE 4
extern  double * divide_1();
extern  double * divide_1_svc();
#define SUMA_VECTOR 5
extern  resultvector * suma_vector_1();
extern  resultvector * suma_vector_1_svc();
#define RESTA_VECTOR 6
extern  resultvector * resta_vector_1();
extern  resultvector * resta_vector_1_svc();
#define PRODUCTO_VECTOR 7
extern  int * producto_vector_1();
extern  int * producto_vector_1_svc();
#define SUMA_MATRIZ 8
extern  resultmatriz * suma_matriz_1();
extern  resultmatriz * suma_matriz_1_svc();
#define RESTA_MATRIZ 9
extern  resultmatriz * resta_matriz_1();
extern  resultmatriz * resta_matriz_1_svc();
#define PRODUCTO_MATRIZ 10
extern  resultmatriz * producto_matriz_1();
extern  resultmatriz * producto_matriz_1_svc();
#define LOGARITMO 11
extern  double * logaritmo_1();
extern  double * logaritmo_1_svc();
#define SENO 12
extern  double * seno_1();
extern  double * seno_1_svc();
#define COS 13
extern  double * cos_1();
extern  double * cos_1_svc();
#define AREA_TRIANGULO 14
extern  double * area_triangulo_1();
extern  double * area_triangulo_1_svc();
#define AREA_RECTANGULO 15
extern  double * area_rectangulo_1();
extern  double * area_rectangulo_1_svc();
#define AREA_CIRCULO 16
extern  double * area_circulo_1();
extern  double * area_circulo_1_svc();
extern int calcprog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_intpair (XDR *, intpair*);
extern  bool_t xdr_doublepair (XDR *, doublepair*);
extern  bool_t xdr_resultvector (XDR *, resultvector*);
extern  bool_t xdr_resultmatriz (XDR *, resultmatriz*);
extern  bool_t xdr_matrizpair (XDR *, matrizpair*);
extern  bool_t xdr_vectorpair (XDR *, vectorpair*);

#else /* K&R C */
extern bool_t xdr_intpair ();
extern bool_t xdr_doublepair ();
extern bool_t xdr_resultvector ();
extern bool_t xdr_resultmatriz ();
extern bool_t xdr_matrizpair ();
extern bool_t xdr_vectorpair ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_MENU_CALCULADORA_H_RPCGEN */
